Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
---------------------------------
class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        
        if not nums or len(nums) < 3:
            return []
        
        if len(nums) == 3:
            if sum(nums) == 0:
                return [sorted(nums)]

            else:
                return []
        
        # sorting from minimum to larger
        nums.sort()

        if nums[0] > 0:  # example: [1, 3, 5, 7, etc]
            # since is ascending order we cannot have a sum == 0
            return []
                                                                                    
        triplets = list()

        array_length = len(nums)

        for i in range(array_length - 2):

            # if we have consecutive equal numbers we take only the last one
            if i > 0 and nums[i] == nums[i - 1]:
                continue

            left = i + 1
            right = array_length - 1

            cur_val = nums[i]

            while left < right:

                s = cur_val + nums[left] + nums[right]

                if s < 0:  # elements sum to less than zero  eg  [-5, -3, -,2, -1, 0, 1] -> -5 + (-3) + 0 < 0
                    left += 1

                elif s > 0:  # elements sum to greater than zero
                    right -= 1

                else:  # elements sum to zero
		    # appending current selection	
                    triplets.append([cur_val, nums[left], nums[right]])
                    # checking if the next number(s) of "left" is equal with the current number of "left" position
                    while left < right and nums[left] == nums[left + 1]:
                        left += 1
                    # checking if the previous number(s) of "right" is equal with the current number of "right" position
                    while left < right and nums[right] == nums[right - 1]:
                        right -= 1

                    left += 1
                    right -= 1

        return triplets
